/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.allshare.chms_1;

import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mdlaf.MaterialLookAndFeel;

/**
 *
 * @author Chandan Kumar
 */
public class Admin_dashboard extends javax.swing.JFrame {

    /**
     * Creates new form staff_dashboard
     */
    CardLayout cardLayout;
    private final DefaultListModel mod;

    public Admin_dashboard() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        this.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        cardLayout = (CardLayout) (pnlCards.getLayout());
        menu.add(panel);
        mod = new DefaultListModel();
        list.setModel(mod);
        System.out.println("--  " + this.getPreferredSize());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        try{
            jPanel2 = new RoundedPanel(20,new Color(243,242,253));//javax.swing.JPanel();
            jSplitPane1 = new javax.swing.JSplitPane();
            try{
                sidebar = new RoundedPanel(20,new Color(83,71,233));//javax.swing.JPanel();
                logoutBtn = new javax.swing.JButton();
                addHospBtn = new javax.swing.JButton();
                profileBtn = new javax.swing.JButton();
                homeBtn = new javax.swing.JButton();
                viewReqBtn = new javax.swing.JButton();
                attReqBtn = new javax.swing.JButton();
                addUserBtn = new javax.swing.JButton();
                mkReqBtn = new javax.swing.JButton();
                pnlCards = new javax.swing.JPanel();
                homeCard = new javax.swing.JPanel();
                srchField = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                contact_doc = new javax.swing.JButton();
                addHospCard = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                jLabel6 = new javax.swing.JLabel();
                hospital_name = new javax.swing.JTextField();
                hospital_address = new javax.swing.JTextField();
                reg_hosp = new javax.swing.JButton();
                viewReqCard = new javax.swing.JPanel();
                jLabel7 = new javax.swing.JLabel();
                jLabel8 = new javax.swing.JLabel();
                searchbox = new javax.swing.JTextField();
                type = new javax.swing.JComboBox<>();
                jScrollPane2 = new javax.swing.JScrollPane();
                jTable1 = new javax.swing.JTable();
                search_hosp = new javax.swing.JButton();
                attReqCard = new javax.swing.JPanel();
                jLabel9 = new javax.swing.JLabel();
                jLabel10 = new javax.swing.JLabel();
                request_id2 = new javax.swing.JComboBox<>();
                attend_req = new javax.swing.JButton();
                jScrollPane3 = new javax.swing.JScrollPane();
                jTable2 = new javax.swing.JTable();
                jLabel22 = new javax.swing.JLabel();
                jScrollPane5 = new javax.swing.JScrollPane();
                jTable3 = new javax.swing.JTable();
                jLabel23 = new javax.swing.JLabel();
                addUserCard = new javax.swing.JPanel();
                jLabel15 = new javax.swing.JLabel();
                jLabel16 = new javax.swing.JLabel();
                jLabel17 = new javax.swing.JLabel();
                jLabel19 = new javax.swing.JLabel();
                jLabel20 = new javax.swing.JLabel();
                jLabel21 = new javax.swing.JLabel();
                designation1 = new javax.swing.JComboBox<>();
                admin_level1 = new javax.swing.JComboBox<>();
                reg_user = new javax.swing.JButton();
                jLabel35 = new javax.swing.JLabel();
                aadhar = new javax.swing.JTextField();
                jButton5 = new javax.swing.JButton();
                name = new javax.swing.JLabel();
                jLabel36 = new javax.swing.JLabel();
                dob = new javax.swing.JLabel();
                jLabel39 = new javax.swing.JLabel();
                doj = new javax.swing.JLabel();
                jLabel41 = new javax.swing.JLabel();
                city = new javax.swing.JLabel();
                jLabel43 = new javax.swing.JLabel();
                state = new javax.swing.JLabel();
                address = new javax.swing.JLabel();
                mobile = new javax.swing.JLabel();
                profileCard = new javax.swing.JPanel();
                jLabel4 = new javax.swing.JLabel();
                jLabel5 = new javax.swing.JLabel();
                jLabel24 = new javax.swing.JLabel();
                jLabel25 = new javax.swing.JLabel();
                emp_user_id = new javax.swing.JLabel();
                emp_aadhar = new javax.swing.JLabel();
                emp_name = new javax.swing.JLabel();
                emp_dob = new javax.swing.JLabel();
                jLabel11 = new javax.swing.JLabel();
                emp_doj = new javax.swing.JLabel();
                jLabel13 = new javax.swing.JLabel();
                emp_city = new javax.swing.JLabel();
                jLabel26 = new javax.swing.JLabel();
                emp_state = new javax.swing.JLabel();
                jLabel27 = new javax.swing.JLabel();
                jScrollPane6 = new javax.swing.JScrollPane();
                emp_address = new javax.swing.JTextArea();
                jLabel28 = new javax.swing.JLabel();
                emp_mobile = new javax.swing.JLabel();
                jLabel29 = new javax.swing.JLabel();
                jLabel38 = new javax.swing.JLabel();
                designation = new javax.swing.JLabel();
                jLabel12 = new javax.swing.JLabel();
                admin_level = new javax.swing.JLabel();
                mkReqCard = new javax.swing.JPanel();
                jLabel30 = new javax.swing.JLabel();
                jLabel31 = new javax.swing.JLabel();
                item1 = new javax.swing.JComboBox<>();
                specs1 = new javax.swing.JTextField();
                jLabel32 = new javax.swing.JLabel();
                hospital_name_displayed = new javax.swing.JLabel();
                jLabel34 = new javax.swing.JLabel();
                urgency_level1 = new javax.swing.JComboBox<>();
                make_req = new javax.swing.JButton();
                jLabel14 = new javax.swing.JLabel();

                list.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                list.setModel(new javax.swing.AbstractListModel<String>() {
                    String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                    public int getSize() { return strings.length; }
                    public String getElementAt(int i) { return strings[i]; }
                });
                jScrollPane1.setViewportView(list);

                javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
                panel.setLayout(panelLayout);
                panelLayout.setHorizontalGroup(
                    panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                panelLayout.setVerticalGroup(
                    panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                menu.setFocusable(false);

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);

            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel2.setOpaque(false);

            //{
                //    private final int location = 200;
                //    {
                    //
                    //        setDividerLocation( jel1.getWidth() );
                    //    }Pan
                //    @Override
                //    public int getDividerLocation() {
                    //        return sidebar.getWidth() ;
                    //    }
                //    @Override
                //    public int getLastDividerLocation() {
                    //        return sidebar.getWidth() ;
                    //    }
                //}
            jSplitPane1.setEnabled(false);
            jSplitPane1.setOpaque(false);

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        sidebar.setOpaque(false);

        logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.png"))); // NOI18N
        logoutBtn.setText(" ");
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutBtnMouseExited(evt);
            }
        });
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        addHospBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        addHospBtn.setText(" ");
        addHospBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addHospBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addHospBtnMouseExited(evt);
            }
        });
        addHospBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospBtnActionPerformed(evt);
            }
        });

        profileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.png"))); // NOI18N
        profileBtn.setText(" ");
        profileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profileBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                profileBtnMouseExited(evt);
            }
        });
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        homeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home.png"))); // NOI18N
        homeBtn.setText(" ");
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeBtnMouseExited(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        viewReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        viewReqBtn.setText(" ");
        viewReqBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewReqBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewReqBtnMouseExited(evt);
            }
        });
        viewReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReqBtnActionPerformed(evt);
            }
        });

        attReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit.png"))); // NOI18N
        attReqBtn.setText(" ");
        attReqBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                attReqBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                attReqBtnMouseExited(evt);
            }
        });
        attReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attReqBtnActionPerformed(evt);
            }
        });

        addUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-user.png"))); // NOI18N
        addUserBtn.setText(" ");
        addUserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addUserBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addUserBtnMouseExited(evt);
            }
        });
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        mkReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/branding.png"))); // NOI18N
        mkReqBtn.setText(" ");
        mkReqBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mkReqBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mkReqBtnMouseExited(evt);
            }
        });
        mkReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mkReqBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addHospBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profileBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homeBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewReqBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attReqBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mkReqBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeBtn)
                .addGap(194, 194, 194)
                .addComponent(profileBtn)
                .addGap(39, 39, 39)
                .addComponent(mkReqBtn)
                .addGap(39, 39, 39)
                .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(addHospBtn)
                .addGap(38, 38, 38)
                .addComponent(viewReqBtn)
                .addGap(38, 38, 38)
                .addComponent(attReqBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(logoutBtn)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(sidebar);

        pnlCards.setLayout(new java.awt.CardLayout());

        homeCard.setBackground(new java.awt.Color(243, 242, 253));

        srchField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        srchField.setText("Search your symptoms....");
        srchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                srchFieldFocusLost(evt);
            }
        });
        srchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                srchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srchFieldKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doc.jpg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Do you have Symptoms of COVID-19?");

        contact_doc.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        contact_doc.setText("Contact a Doctor");
        contact_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_docActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homeCardLayout = new javax.swing.GroupLayout(homeCard);
        homeCard.setLayout(homeCardLayout);
        homeCardLayout.setHorizontalGroup(
            homeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeCardLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(homeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(srchField)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(homeCardLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contact_doc, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        homeCardLayout.setVerticalGroup(
            homeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeCardLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(srchField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(homeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(contact_doc))
                .addContainerGap(269, Short.MAX_VALUE))
        );

        pnlCards.add(homeCard, "homeCard");

        addHospCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Name");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("State");

        hospital_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        hospital_name.setText("Hospital name to be Registered");

        hospital_address.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        hospital_address.setText("State where hospital is located");

        reg_hosp.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        reg_hosp.setText("Register");
        reg_hosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg_hospActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addHospCardLayout = new javax.swing.GroupLayout(addHospCard);
        addHospCard.setLayout(addHospCardLayout);
        addHospCardLayout.setHorizontalGroup(
            addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addHospCardLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reg_hosp, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(hospital_name, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                        .addComponent(hospital_address)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        addHospCardLayout.setVerticalGroup(
            addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addHospCardLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospital_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(addHospCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospital_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(reg_hosp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(656, Short.MAX_VALUE))
        );

        pnlCards.add(addHospCard, "registerCard");

        viewReqCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("View / Search Requests");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Search");

        searchbox.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        searchbox.setText("Keyword");
        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });

        type.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hospital", "Item", "Request ID", "Urgency Level" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Item", "Hospital", "Urgency Level", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        search_hosp.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        search_hosp.setText("Search");
        search_hosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_hospActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewReqCardLayout = new javax.swing.GroupLayout(viewReqCard);
        viewReqCard.setLayout(viewReqCardLayout);
        viewReqCardLayout.setHorizontalGroup(
            viewReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(viewReqCardLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(viewReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewReqCardLayout.createSequentialGroup()
                                .addComponent(searchbox, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(viewReqCardLayout.createSequentialGroup()
                                .addComponent(search_hosp, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        viewReqCardLayout.setVerticalGroup(
            viewReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(29, 29, 29)
                .addGroup(viewReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(search_hosp)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCards.add(viewReqCard, "viewReqCard");

        attReqCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Attend Request");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("Enter Request ID");

        request_id2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        request_id2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        attend_req.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        attend_req.setText("Attend Request");
        attend_req.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attend_reqActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Item", "Hospital", "Verified"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Request Confirmation Table");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Id", "Item", "Urgency Level", "Fulfilled", "Confirmed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable3);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Requests Table");

        javax.swing.GroupLayout attReqCardLayout = new javax.swing.GroupLayout(attReqCard);
        attReqCard.setLayout(attReqCardLayout);
        attReqCardLayout.setHorizontalGroup(
            attReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(attReqCardLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(attReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(request_id2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(attReqCardLayout.createSequentialGroup()
                                .addComponent(attend_req, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 382, Short.MAX_VALUE))))
                    .addComponent(jScrollPane5)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        attReqCardLayout.setVerticalGroup(
            attReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(attReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(request_id2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(attend_req)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCards.add(attReqCard, "attReqCard");

        addUserCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel15.setText("Name");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel16.setText("Admin Level");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel17.setText("Designation");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel19.setText("Address");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel20.setText("Mobile No.");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Add User");

        designation1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        designation1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Surgeon", "Nurse", "Admin", "Hospital admin" }));

        admin_level1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        admin_level1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "staff", "admin", "super admin" }));
        admin_level1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_level1ActionPerformed(evt);
            }
        });

        reg_user.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        reg_user.setText("Register User");
        reg_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg_userActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel35.setText("Aadhar Number");

        aadhar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        aadhar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                aadharKeyPressed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        name.setText("To Be Displayed");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel36.setText("Date of Birth");

        dob.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        dob.setText("To Be Displayed");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel39.setText("Date of Joining");

        doj.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        doj.setText("To Be Displayed");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel41.setText("City");

        city.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        city.setText("To Be Displayed");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel43.setText("State");

        state.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        state.setText("To Be Displayed");

        address.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        address.setText("To Be Displayed");

        mobile.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        mobile.setText("To Be Displayed");

        javax.swing.GroupLayout addUserCardLayout = new javax.swing.GroupLayout(addUserCard);
        addUserCard.setLayout(addUserCardLayout);
        addUserCardLayout.setHorizontalGroup(
            addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserCardLayout.createSequentialGroup()
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addUserCardLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addUserCardLayout.createSequentialGroup()
                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(state, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(addUserCardLayout.createSequentialGroup()
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(addUserCardLayout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(doj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(addUserCardLayout.createSequentialGroup()
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(addUserCardLayout.createSequentialGroup()
                                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(designation1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(admin_level1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mobile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(addUserCardLayout.createSequentialGroup()
                                        .addComponent(reg_user, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 320, Short.MAX_VALUE))
                                    .addComponent(aadhar))))
                        .addGap(10, 10, 10)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        addUserCardLayout.setVerticalGroup(
            addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel35)
                    .addComponent(aadhar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(dob))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(doj))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(city))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(state))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(address))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobile))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(designation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addUserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_level1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(reg_user, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        pnlCards.add(addUserCard, "addUserCard");

        profileCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Name");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Date of Birth");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel24.setText("User ID");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel25.setText("Aadhar Number");

        emp_user_id.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_user_id.setText("To Be Displayed");

        emp_aadhar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_aadhar.setText("To Be Displayed");

        emp_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_name.setText("To Be Displayed");

        emp_dob.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_dob.setText("To Be Displayed");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("Date of Joining");

        emp_doj.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_doj.setText("To Be Displayed");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setText("City");

        emp_city.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_city.setText("To Be Displayed");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel26.setText("State");

        emp_state.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_state.setText("To Be Displayed");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel27.setText("Address");
        jLabel27.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        emp_address.setColumns(20);
        emp_address.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        emp_address.setRows(5);
        jScrollPane6.setViewportView(emp_address);

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel28.setText("Mobile");

        emp_mobile.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emp_mobile.setText("To Be Displayed");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("View Profile");
        jLabel29.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 255)));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel38.setText("Designation");

        designation.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        designation.setText("To Be Displayed");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setText("Admin Level");

        admin_level.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        admin_level.setText("To Be Displayed from users table");

        javax.swing.GroupLayout profileCardLayout = new javax.swing.GroupLayout(profileCard);
        profileCard.setLayout(profileCardLayout);
        profileCardLayout.setHorizontalGroup(
            profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_user_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_aadhar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_doj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emp_state, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emp_mobile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(profileCardLayout.createSequentialGroup()
                        .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(designation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_level, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        profileCardLayout.setVerticalGroup(
            profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(emp_user_id))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(emp_aadhar))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emp_name))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(emp_dob))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(emp_doj))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(emp_city))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(emp_state))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(emp_mobile))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(designation))
                .addGap(18, 18, 18)
                .addGroup(profileCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(admin_level))
                .addContainerGap(185, Short.MAX_VALUE))
        );

        pnlCards.add(profileCard, "profileCard");

        mkReqCard.setBackground(new java.awt.Color(243, 242, 253));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Make Request");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel31.setText("Item");

        item1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        item1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liver", "Kidney", "Pancreas", "Heart", "Lung", "Intestine", "Cornea", "Middle ear", "Skin", "Bone", "Bone marrow", "Heart valves", "Connective tissue", "Blood", "Plasma" }));

        specs1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        specs1.setText("Keyword");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel32.setText("Hospital");

        hospital_name_displayed.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        hospital_name_displayed.setText("To Be Displayed");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel34.setText("Urgency Level");

        urgency_level1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        urgency_level1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "High" }));

        make_req.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        make_req.setText("Make Request");
        make_req.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                make_reqActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel14.setText("Specification");

        javax.swing.GroupLayout mkReqCardLayout = new javax.swing.GroupLayout(mkReqCard);
        mkReqCard.setLayout(mkReqCardLayout);
        mkReqCardLayout.setHorizontalGroup(
            mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mkReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mkReqCardLayout.createSequentialGroup()
                        .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(specs1)
                            .addComponent(item1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(mkReqCardLayout.createSequentialGroup()
                        .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mkReqCardLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(hospital_name_displayed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(mkReqCardLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mkReqCardLayout.createSequentialGroup()
                                        .addComponent(make_req, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 398, Short.MAX_VALUE))
                                    .addComponent(urgency_level1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        mkReqCardLayout.setVerticalGroup(
            mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mkReqCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(item1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(18, 18, 18)
                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specs1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospital_name_displayed, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mkReqCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urgency_level1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(make_req, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(516, Short.MAX_VALUE))
        );

        pnlCards.add(mkReqCard, "mkReqCard");

        jSplitPane1.setRightComponent(pnlCards);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        Admin_login al = new Admin_login();
        al.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void logoutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseEntered
        logoutBtn.setText("Logout");
        logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logout (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_logoutBtnMouseEntered

    private void logoutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseExited
        logoutBtn.setText(" ");
        logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());

    }//GEN-LAST:event_logoutBtnMouseExited

    private void addHospBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addHospBtnMouseEntered
        addHospBtn.setText("Add Hospital");
        addHospBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_addHospBtnMouseEntered

    private void addHospBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addHospBtnMouseExited
        addHospBtn.setText(" ");
        addHospBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_addHospBtnMouseExited

    private void profileBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileBtnMouseEntered
        profileBtn.setText("Profile");
        profileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user (1).png")));
        jSplitPane1.setDividerLocation(130);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 40, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 40, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_profileBtnMouseEntered

    private void profileBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileBtnMouseExited
        profileBtn.setText(" ");
        profileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.png")));
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 40, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 40, jSplitPane1.getHeight());
        jSplitPane1.setDividerLocation(90);
    }//GEN-LAST:event_profileBtnMouseExited

    private void homeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseEntered
        homeBtn.setText("Home");
        homeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_homeBtnMouseEntered

    private void homeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseExited
        homeBtn.setText(" ");
        homeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_homeBtnMouseExited

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        cardLayout.show(pnlCards, "homeCard");
    }//GEN-LAST:event_homeBtnActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
        cardLayout.show(pnlCards, "profileCard");
    }//GEN-LAST:event_profileBtnActionPerformed

    private void addHospBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospBtnActionPerformed
        if (admin_level.getText().equals("super admin"))
            cardLayout.show(pnlCards, "registerCard");
        else {
            JOptionPane.showMessageDialog(this, "You don't have permissions", "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addHospBtnActionPerformed

    private void srchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchFieldKeyReleased

    }//GEN-LAST:event_srchFieldKeyReleased
    boolean flag = false;
    private void srchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchFieldKeyPressed

        if (!flag) {
            srchField.setText("");
            flag = true;
        }
        String search = srchField.getText().trim();

        if (!search.equals("")) {
            mod.removeAllElements();
            for (int i = 0; i < 100; i++) {
                mod.addElement(i);
            }
            menu.show(srchField, 0, srchField.getHeight());
        }
    }//GEN-LAST:event_srchFieldKeyPressed

    private void srchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_srchFieldFocusLost

    }//GEN-LAST:event_srchFieldFocusLost

    private void viewReqBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewReqBtnMouseEntered
        viewReqBtn.setText("View/Search Requests");
        viewReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_viewReqBtnMouseEntered

    private void viewReqBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewReqBtnMouseExited
        viewReqBtn.setText(" ");
        viewReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_viewReqBtnMouseExited

    private void viewReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReqBtnActionPerformed
        cardLayout.show(pnlCards, "viewReqCard");
    }//GEN-LAST:event_viewReqBtnActionPerformed

    private void attReqBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attReqBtnMouseEntered
        attReqBtn.setText("Attend Requests");
        attReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_attReqBtnMouseEntered

    private void attReqBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attReqBtnMouseExited
        attReqBtn.setText(" ");
        attReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_attReqBtnMouseExited

    private void attReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attReqBtnActionPerformed
        Connection mycon = null;
        Statement stmnt = null;
        ResultSet myrs = null;
        Statement stmnt2 = null;
        Statement stmnt3 = null;
        ResultSet myrs2 = null;
        cardLayout.show(pnlCards, "attReqCard");
        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();
        for (int i = model1.getRowCount() - 1; i >= 0; i--) {
            model1.removeRow(i);
        }
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        for (int i = model2.getRowCount() - 1; i >= 0; i--) {
            model2.removeRow(i);
        }
        request_id2.removeAllItems();
        try {
            mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
            stmnt = mycon.createStatement();
            stmnt2 = mycon.createStatement();
            stmnt3 = mycon.createStatement();
            String query = "Select * from notification";
            myrs = stmnt.executeQuery(query);
            while (myrs.next()) {
                if (myrs.getInt("fulfilled") == 0 || myrs.getInt("confirmed") == 0) {
                    request_id2.addItem(String.valueOf(myrs.getInt("request_id")));
                    query = "Select * from requests where request_id = " + String.valueOf(myrs.getInt("request_id"));
                    myrs2 = stmnt2.executeQuery(query);
                    while (myrs2.next()) {
                        boolean isConfirmed = true, isFulfilled = true;
                        if (myrs.getInt("fulfilled") == 0) {
                            isFulfilled = false;
                        }
                        if (myrs.getInt("confirmed") == 0) {
                            isConfirmed = false;
                        }
                        model1.addRow(new Object[]{String.valueOf(myrs.getInt("request_id")), myrs2.getString("item"), myrs2.getString("specifcation"), myrs2.getString("urgency_level"), isFulfilled, isConfirmed});
                    }
                } else {
                    query = "Select * from requests where request_id = " + String.valueOf(myrs.getInt("request_id"));
                    myrs2 = stmnt2.executeQuery(query);

                    while (myrs2.next()) {
                        int request_id = myrs.getInt("request_id");
                        if (myrs2.getString("request_status").equals("pending")) {
                            query = String.format("UPDATE `oPeO2hCFKh`.`requests` SET `request_status` = 'fulfilled' WHERE (`request_id` = '%d')", request_id);

                            int myrs3 = stmnt3.executeUpdate(query);
                        }
                        model2.addRow(new Object[]{String.valueOf(myrs.getInt("request_id")), myrs2.getString("item"), myrs2.getString("specifcation"), myrs2.getString("req_from_hosp"), true});
                    }
                }
            }

        } catch (Exception exc) {
            exc.printStackTrace();
        } finally {
            if (myrs != null) {
                try {
                    myrs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (stmnt != null) {
                try {
                    stmnt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_attReqBtnActionPerformed

    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchboxActionPerformed

    private void addUserBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserBtnMouseEntered
        addUserBtn.setText("Add User");
        addUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-user (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_addUserBtnMouseEntered

    private void addUserBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserBtnMouseExited
        addUserBtn.setText(" ");
        addUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-user.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_addUserBtnMouseExited

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        cardLayout.show(pnlCards, "addUserCard");
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void admin_level1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_level1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admin_level1ActionPerformed

    private void mkReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mkReqBtnActionPerformed
        cardLayout.show(pnlCards, "mkReqCard");
    }//GEN-LAST:event_mkReqBtnActionPerformed

    private void mkReqBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mkReqBtnMouseEntered
        mkReqBtn.setText("Make Request");
        mkReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/branding (1).png")));
        jSplitPane1.setDividerLocation(200);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() + 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() + 130, jSplitPane1.getHeight());
        menu.setVisible(false);
    }//GEN-LAST:event_mkReqBtnMouseEntered

    private void mkReqBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mkReqBtnMouseExited
        mkReqBtn.setText(" ");
        mkReqBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/branding.png")));
        jSplitPane1.setDividerLocation(90);
        jPanel2.setBounds(jPanel2.getX(), jPanel2.getY(), jPanel2.getWidth() - 130, jPanel2.getHeight());
        jSplitPane1.setBounds(jSplitPane1.getX(), jSplitPane1.getY(), jSplitPane1.getWidth() - 130, jSplitPane1.getHeight());
    }//GEN-LAST:event_mkReqBtnMouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void aadharKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aadharKeyPressed
        String input = aadhar.getText();
        if (input.length() == 12) {
            Connection mycon = null;
            Statement stmnt = null;
            ResultSet myrs = null;
            try {
                mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
                stmnt = mycon.createStatement();
                long aadhar_number = Long.parseLong(aadhar.getText());
                String query = "Select * from aadhar_db where aadhar_no = " + aadhar_number;
                boolean aadhar_exists = false;
                myrs = stmnt.executeQuery(query);
                while (myrs.next()) {
                    name.setText(myrs.getString("name"));
//                gender = myrs.getString("gender");
                    dob.setText(myrs.getString("dob"));
                    state.setText(myrs.getString("state"));
                    city.setText(myrs.getString("city"));
                    address.setText(myrs.getString("address"));
                    doj.setText(java.time.LocalDate.now().toString());
                    aadhar_exists = true;
//              email = myrs.getString("email_id");
                    mobile.setText(String.valueOf(myrs.getLong("mobile_no")));
                    designation1.getSelectedItem();
                    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/correct.gif")));
                }
                if (!aadhar_exists) {
                    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png")));
                }
            } catch (Exception exc) {
                exc.printStackTrace();
            } finally {
                if (myrs != null) {
                    try {
                        myrs.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (stmnt != null) {
                    try {
                        stmnt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else {
            jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png")));
            name.setText("To be displayed");
//                gender = myrs.getString("gender");
            dob.setText("To be displayed");
            state.setText("To be displayed");
            city.setText("To be displayed");
            address.setText("To be displayed");
            doj.setText("To be displayed");
//                aadhar_exists = true;
//              email = myrs.getString("email_id");
            mobile.setText("To be displayed");
//                designation1.getSelectedItem();
        }
    }//GEN-LAST:event_aadharKeyPressed

    private void contact_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_docActionPerformed
        JOptionPane.showMessageDialog(this, "Name : Dr. Rakesh Sharma\nContact no. : 9874563214", "Dialog", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_contact_docActionPerformed
    int is_admin1;
    private void search_hospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_hospActionPerformed
        String choice = type.getSelectedItem().toString();
        Hashtable<String, String> my_dict = new Hashtable<String, String>();
        my_dict.put("Hospital", "req_from_hosp");
        my_dict.put("Item", "item");
        my_dict.put("Request ID", "request_id");
        my_dict.put("Urgency Level", "urgency_level");
        choice = my_dict.get(choice);
        Connection mycon = null;
        Statement stmnt = null;
        Statement stmnt2 = null;
        ResultSet myrs = null;
        ResultSet myrs2 = null;
        try {
            mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
            stmnt = mycon.createStatement();
            stmnt2 = mycon.createStatement();
            int patient_id;
            String query;
            if (choice.equals("request_id")) {
                query = "Select * from requests where " + choice + " = " + searchbox.getText();
            } else {
                query = "Select * from requests where " + choice + " = \"" + searchbox.getText() + "\"";
            }
            myrs = stmnt.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = model.getRowCount() - 1; i >= 0; i--) {
                model.removeRow(0);
            }
            while (myrs.next()) {
                model.addRow(new Object[]{myrs.getInt("request_id"), myrs.getString("item"), myrs.getString("specifcation"), myrs.getString("req_from_hosp"), myrs.getString("urgency_level"), myrs.getString("request_status")});
            }
        } catch (Exception exc) {
            exc.printStackTrace();
        } finally {
            if (myrs != null) {
                try {
                    myrs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (stmnt != null) {
                try {
                    stmnt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_search_hospActionPerformed

    private void attend_reqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attend_reqActionPerformed
        int request_id = Integer.parseInt(request_id2.getSelectedItem().toString());
        Connection mycon = null;
        Statement stmnt = null;
        Statement stmnt2 = null;
        Statement stmnt3 = null;
        ResultSet myrs = null;
        ResultSet myrs3 = null;
        try {
            mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
            stmnt = mycon.createStatement();
            stmnt2 = mycon.createStatement();
            stmnt3 = mycon.createStatement();
            String query = "Select * from requests where request_id = " + String.valueOf(request_id);
            myrs = stmnt.executeQuery(query);
            int myrs2 = 0;
            boolean r = true;
            while (myrs.next()) {
                myrs3 = stmnt3.executeQuery("Select * from notification where request_id = " + String.valueOf(request_id));
                if (myrs.getString("req_from_hosp").equals(hospital_name_displayed.getText())) {
                    while (myrs3.next()) {
                        if (myrs3.getInt("confirmed") == 1) {
                            JOptionPane.showMessageDialog(this, "Request already attended", "Dialog", JOptionPane.ERROR_MESSAGE);
                            r = false;
                        } else {
                            query = String.format("UPDATE `oPeO2hCFKh`.`notification` SET `confirmed` = '1' WHERE (`request_id` = '%d')", request_id);
                            myrs2 = stmnt2.executeUpdate(query);
                        }
                    }
                } else {
                    while (myrs3.next()) {
                        if (myrs3.getInt("fulfilled") == 1) {
                            JOptionPane.showMessageDialog(this, "Request already attended", "Dialog", JOptionPane.ERROR_MESSAGE);
                            r = false;
                        } else {
                            query = String.format("UPDATE `oPeO2hCFKh`.`notification` SET `fulfilled` = '1' WHERE (`request_id` = '%d')", request_id);
                            myrs2 = stmnt2.executeUpdate(query);
                            query = String.format("UPDATE `oPeO2hCFKh`.`requests` SET `fullfill_by_hosp` = '%s' WHERE (`request_id` = '%d')", hospital_name_displayed.getText(), request_id);
                            myrs2 = stmnt2.executeUpdate(query);
                        }
                    }
                }
            }
            if (myrs2 == 0 && r) {
                JOptionPane.showMessageDialog(this, "Cannot attend Requests at this time", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else if (r) {
                JOptionPane.showMessageDialog(this, "Attended successfull", "Dialog", JOptionPane.OK_OPTION);
                cardLayout.show(pnlCards, "homeCard");
            }
        } catch (Exception exc) {
            exc.printStackTrace();
        } finally {
            if (myrs != null) {
                try {
                    myrs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (stmnt != null) {
                try {
                    stmnt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_attend_reqActionPerformed

    private void make_reqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_make_reqActionPerformed
        Connection mycon = null;
        Statement stmnt = null;
        ResultSet myrs = null;
        try {
            mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
            stmnt = mycon.createStatement();
            String query = "Select * from requests";
            myrs = stmnt.executeQuery(query);
            int request_id = 100000;
            while (myrs.next()) {
                request_id++;
            }
            query = String.format("INSERT INTO `oPeO2hCFKh`.`requests` (`request_id`, `item`, `req_from_hosp`, `urgency_level`, `fullfill_by_hosp`, `request_status`, `specifcation`) VALUES ('%d', '%s', '%s', '%s', '', 'pending', '%S')", request_id, item1.getSelectedItem(), hospital_name_displayed.getText(), urgency_level1.getSelectedItem(), specs1.getText());
            int myrs1 = stmnt.executeUpdate(query);
            query = String.format("INSERT INTO `oPeO2hCFKh`.`notification` (`request_id`, `fulfilled`, `confirmed`) VALUES ('%d', '0', '0')", request_id);
            int myrs2 = stmnt.executeUpdate(query);
            if (myrs1 == 0 || myrs2 == 0) {
                JOptionPane.showMessageDialog(this, "Fill all the details", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Request successfull", "Dialog", JOptionPane.OK_OPTION);
                cardLayout.show(pnlCards, "homeCard");
            }
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Fill all the details", "Dialog", JOptionPane.ERROR_MESSAGE);
            exc.printStackTrace();
        } finally {
            if (myrs != null) {
                try {
                    myrs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (stmnt != null) {
                try {
                    stmnt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_make_reqActionPerformed

    private void reg_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg_userActionPerformed
        if (admin_level.getText().equals("admin") && (designation1.getSelectedItem().equals("admin") || admin_level1.getSelectedItem().equals("super admin"))) {
            JOptionPane.showMessageDialog(this, "You don't have permissions", "Dialog", JOptionPane.OK_OPTION);
        } else {
            Connection mycon = null;
            Statement stmnt = null;
            ResultSet myrs = null;
            try {
                mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
                stmnt = mycon.createStatement();
                String query = "Select * from users";
//            boolean aadhar_number_exists = false;
                myrs = stmnt.executeQuery(query);
                int user_id = 100000;
                int emp_id = 10000;
                while (myrs.next()) {
                    user_id++;
                    emp_id++;
                }
                query = String.format("INSERT INTO `oPeO2hCFKh`.`staff_details` (`user_id`, `aadhar_number`, `emloyee_id`, `emp_name`, `emp_dob`, `emp_doj`, `emp_city`, `emp_state`, `emp_address`, `emp_mobile`, `designation`) VALUES ('%d', '%d', '%d', '%s', '%s', '%s', '%s', '%s', '%s', '%d', '%s')", user_id, Long.parseLong(aadhar.getText()), emp_id, name.getText(), dob.getText(), doj.getText(), city.getText(), state.getText(), address.getText(), Long.parseLong(mobile.getText()), designation1.getSelectedItem());
                int myrs1 = stmnt.executeUpdate(query);
                String user_name = name.getText() + String.valueOf(user_id);
                String password = String.valueOf(emp_id);
                int is_admin;
                if (admin_level1.getSelectedItem().equals("Admin")) {
                    is_admin = 1;
                } else {
                    is_admin = 0;
                }
                query = String.format("INSERT INTO `oPeO2hCFKh`.`users` (`user_id`, `user_name`, `password`, `is_admin`, `admin_level`) VALUES ('%d', '%s', '%s', '%d', '%s')", user_id, user_name, password, is_admin, admin_level1.getSelectedItem());
                int myrs2 = stmnt.executeUpdate(query);
                if (myrs1 == 0 || myrs2 == 0) {
                    JOptionPane.showMessageDialog(this, "Fill all the details", "Dialog", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Details successfully saved", "Dialog", JOptionPane.OK_OPTION);
                    cardLayout.show(pnlCards, "homeCard");
                }
            } catch (Exception exc) {
                JOptionPane.showMessageDialog(this, "Aadhar number already registered", "Dialog", JOptionPane.ERROR_MESSAGE);
                exc.printStackTrace();
            } finally {
                if (myrs != null) {
                    try {
                        myrs.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (stmnt != null) {
                    try {
                        stmnt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_reg_userActionPerformed

    private void reg_hospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg_hospActionPerformed
        Connection mycon = null;
        Statement stmnt = null;
        ResultSet myrs = null;
        try {
            mycon = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/oPeO2hCFKh", "oPeO2hCFKh", "i1USfNINPn");
            stmnt = mycon.createStatement();
            String query = "Select * from hospital_db";
            myrs = stmnt.executeQuery(query);
            int hospital_id = 100000;
            while (myrs.next()) {
                hospital_id++;
            }
            query = String.format("INSERT INTO `oPeO2hCFKh`.`hospital_db` (`hospital_id`, `hosp_name`, `hospital_address`) VALUES ('%d', '%s', '%s')", hospital_id, hospital_name.getText(), hospital_address.getText());
            int myrs1 = stmnt.executeUpdate(query);
            if (myrs1 == 0) {
                JOptionPane.showMessageDialog(this, "Fill all the details", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Details successfully saved", "Dialog", JOptionPane.OK_OPTION);
                cardLayout.show(pnlCards, "homeCard");
            }
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Fill all the details", "Dialog", JOptionPane.ERROR_MESSAGE);
            exc.printStackTrace();
        } finally {
            if (myrs != null) {
                try {
                    myrs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (stmnt != null) {
                try {
                    stmnt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Staff_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_reg_hospActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.lang.InstantiationException
     * @throws javax.swing.UnsupportedLookAndFeelException
     * @throws java.lang.ClassNotFoundException
     * @throws java.lang.IllegalAccessException
     */
    public static void main(String[] args) throws InstantiationException, UnsupportedLookAndFeelException, ClassNotFoundException, IllegalAccessException {

        MaterialLookAndFeel lf = new MaterialLookAndFeel();
        UIManager.setLookAndFeel(lf);
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Admin_dashboard().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aadhar;
    private javax.swing.JButton addHospBtn;
    private javax.swing.JPanel addHospCard;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JPanel addUserCard;
    private javax.swing.JLabel address;
    public javax.swing.JLabel admin_level;
    private javax.swing.JComboBox<String> admin_level1;
    private javax.swing.JButton attReqBtn;
    private javax.swing.JPanel attReqCard;
    private javax.swing.JButton attend_req;
    private javax.swing.JLabel city;
    private javax.swing.JButton contact_doc;
    public javax.swing.JLabel designation;
    private javax.swing.JComboBox<String> designation1;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel doj;
    public javax.swing.JLabel emp_aadhar;
    public javax.swing.JTextArea emp_address;
    public javax.swing.JLabel emp_city;
    public javax.swing.JLabel emp_dob;
    public javax.swing.JLabel emp_doj;
    public javax.swing.JLabel emp_mobile;
    public javax.swing.JLabel emp_name;
    public javax.swing.JLabel emp_state;
    public javax.swing.JLabel emp_user_id;
    private javax.swing.JButton homeBtn;
    private javax.swing.JPanel homeCard;
    private javax.swing.JTextField hospital_address;
    private javax.swing.JTextField hospital_name;
    public javax.swing.JLabel hospital_name_displayed;
    private javax.swing.JComboBox<String> item1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JList<String> list;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton make_req;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JButton mkReqBtn;
    private javax.swing.JPanel mkReqCard;
    private javax.swing.JLabel mobile;
    private javax.swing.JLabel name;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel pnlCards;
    private javax.swing.JButton profileBtn;
    private javax.swing.JPanel profileCard;
    private javax.swing.JButton reg_hosp;
    private javax.swing.JButton reg_user;
    private javax.swing.JComboBox<String> request_id2;
    private javax.swing.JButton search_hosp;
    private javax.swing.JTextField searchbox;
    private javax.swing.JPanel sidebar;
    private javax.swing.JTextField specs1;
    private javax.swing.JTextField srchField;
    private javax.swing.JLabel state;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JComboBox<String> urgency_level1;
    private javax.swing.JButton viewReqBtn;
    private javax.swing.JPanel viewReqCard;
    // End of variables declaration//GEN-END:variables

}
